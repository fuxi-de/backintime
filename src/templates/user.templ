package templates

script spotifyWebplayer(token string) {
  window.onSpotifyWebPlaybackSDKReady = () => {
        console.log('onSpotifyWebPlaybackSDKReady')
        const player = new window.Spotify.Player({
            name: 'Web Playback SDK',
            getOAuthToken: cb => { cb(token); },
        });
        const playButton = document.getElementById('playButton')
        player.addListener('ready', ({ device_id }) => {
            console.log('Ready with Device ID', device_id);
            window.backintime = {} 
            window.backintime.device_id = device_id
            playButton.addEventListener('click', () => {
            player.activateElement();
});
        });

        player.addListener('not_ready', ({ device_id }) => {
            console.log('Device ID has gone offline', device_id);
        });
        
        player.addListener('player_state_changed', ( state => {

          if (!state) {
            return;
          }

          player.getCurrentState().then( state => { 
             if (!state) {
                console.error('User is not playing music through the Web Playback SDK');
                return;
             }

             var current_track = state.track_window.current_track;
             var next_track = state.track_window.next_tracks[0];

             console.log('Currently Playing', current_track);
             console.log('Playing Next', next_track); 
          });

        }));


        player.connect();

    };

}

templ User(name string, token string) {
	<div>Hello, { name }</div>
	<p>
		{ token }
	</p>
	<button id="playButton" onClick="fetch('http://localhost:1312/play/florian.schildwaechter@gmail.com/'+window.backintime.device_id)">test</button>
	@spotifyWebplayer(token)
}

templ UserPage(name string, token string) {
	@Layout(User(name, token))
}
